{"version":3,"sources":["components/HomePage/HomePage.module.css","components/HomePage/HomePage.jsx","components/Trip/Trip.jsx","containers/TripsLogged/TripsLogged.jsx","containers/TripLogger/TripLogger.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","HomePage","props","className","style","homePageContainer","to","Button","margin","Trip","travelFrom","travelTo","transport","kmTraveled","workers","logAuthor","roundTrip","CO2byWorker","totalCO2","TripsLogged","useState","tripsState","setTripsState","useEffect","axios","get","then","res","travels","data","console","log","rederedTrips","map","trip","id","_id","display","justifyContent","marginTop","textAlign","Table","width","minWidth","striped","bordered","hover","TripLogger","formState","setFormState","transportState","setTransportState","CO2State","setCO2State","successMessage","setSuccessMessage","tripLog","fromAddress","toAddress","kms","post","catch","error","message","submitLog","setTimeout","Form","onChange","event","preventDefault","form","currentTarget","value","checked","onSubmit","trips","minHeight","Group","controlId","Label","Control","type","placeholder","required","selectedOption","target","options","selectedIndex","transportName","innerText","transportValue","as","Check","label","variant","color","fontWeight","App","path","component","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.885a0739.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"homePageContainer\":\"HomePage_homePageContainer__3jMIa\"};","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button } from 'react-bootstrap';\nimport style from './HomePage.module.css';\n\nconst HomePage = (props) => {\n  return (\n    <section className={style.homePageContainer}>\n      <h1>Haz clic en el botón de la acción que quieras realizar</h1>\n      <section>\n        <Link to=\"/lista-de-viajes\"><Button className=\"btn btn-warning\" style={{margin: '2rem'}}>Ver lista de viajes</Button></Link>\n        <Link to=\"/registro-de-viajes\"><Button className=\"btn btn-success\" style={{margin: '2rem'}}>Registrar un viaje</Button></Link>\n      </section>\n    </section>\n  );\n}\n\nexport default HomePage;","//Un viaje con su información detallada\nimport React from 'react';\nimport style from './Trip.module.css';\n\nconst Trip = (props) => {\n  return (\n    <tr>\n      <td>{props.travelFrom}</td>\n      <td>{props.travelTo}</td>\n      <td>{props.transport}</td>\n      <td>{props.kmTraveled}</td>\n      <td>{props.workers}</td>\n      <td>{props.logAuthor}</td>\n      <td>{props.roundTrip}</td>\n      <td>{props.CO2byWorker}</td>\n      <td>{props.totalCO2}</td>\n    </tr>\n  );\n}\n\nexport default Trip;","//Lista de todos los viajes realizados y su información de huella de CO2\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport Trip from '../../components/Trip/Trip.jsx';\nimport { Table, Button } from 'react-bootstrap';\n\n\n//url for testing: http://localhost:8000//travel-log/v1/travels/\n\nconst TripsLogged = (props) => {\n  const [tripsState, setTripsState] = useState([]);\n\n  useEffect(() => {\n    axios.get(`http://localhost:8000/travel-log/v1/travels/`)\n    .then(res => {\n      const travels = res.data.data.travels;\n      setTripsState(travels);\n    })\n  }, [])\n\n  console.log(tripsState);\n  const rederedTrips = tripsState.map(trip => {\n    return (\n      <Trip key={trip._id} id={trip._id} travelFrom={trip.travelFrom} travelTo={trip.travelTo} transport={trip.transport} kmTraveled={trip.kmTraveled} workers={trip.workers} logAuthor={trip.logAuthor} roundTrip={trip.roundTrip ? \"Sí\" : \"No\"} CO2byWorker={trip.CO2byWorker} totalCO2={trip.totalCO2} />\n    )\n  })\n\n  return (\n    <section>\n        <div style={{display: 'flex', justifyContent: 'space-around', marginTop: '2rem'}}>\n          <h1 style={{textAlign: \"center\"}}>Lista de viajes registrados</h1>\n          <Link to=\"/\"><Button>Volver al inicio</Button></Link>\n          <Link to=\"/registro-de-viajes\"><Button className=\"btn btn-success\">Registrar un nuevo viaje</Button></Link>\n        </div>\n        <Table style={{ width: \"80%\", margin: \"0 auto\", minWidth: \"100vh\" }} striped bordered hover>\n        <thead>\n          <tr>\n            <th>Desde</th>\n            <th>Hacia</th>\n            <th>Transporte</th>\n            <th>Kms</th>\n            <th>Trabajadores</th>\n            <th>Autor del registro</th>\n            <th>¿Ida y vuelta?</th>\n            <th>Kg CO2 por persona</th>\n            <th>Kg CO2 total del viaje</th>\n          </tr>\n        </thead>\n        <tbody>\n          {rederedTrips}\n        </tbody>\n      </Table>\n    </section>\n  );\n}\n\nexport default TripsLogged;","import React, { useEffect, useState } from \"react\";\nimport { Link } from 'react-router-dom';\nimport { Form, Button } from \"react-bootstrap\";\nimport axios from 'axios';\n\nconst TripLogger = (props) => {\n  const [formState, setFormState] = useState(null);\n  const [transportState, setTransportState] = useState(null);\n\tconst [CO2State, setCO2State] = useState(null);\n\tconst [successMessage, setSuccessMessage] = useState(null);\n\n\tconst fetchFormInformation = (event) => {\n\t\t//obtiene la información ingresada en el formulario\n\t\tevent.preventDefault();\n    const form = event.currentTarget;\n    const logAuthor = form[\"formLogAuthor\"].value;\n\t\tconst fromAddress = form[\"formFromAddress\"].value;\n\t\tconst toAddress = form[\"formToAddress\"].value;\n\t\tconst transport = transportState ? transportState : ['Metro', 0.033]; //si no se detecta cambio este será el valor predeterminado\n\t\tconst kms = form[\"formKms\"].value * 1;\n\t\tconst workers = form[\"formWorkers\"].value * 1;\n\t\tconst roundTrip = form[\"formRoundtrip\"].checked;\n\n\t\t//guardando información en el estado\n\t\tsetFormState({\n      logAuthor,\n      fromAddress,\n      toAddress, \n      transport, \n      kms, \n      workers, \n      roundTrip\n    });\n\n  };\n\t\n\t//para detectar la opción seleccionada *posiblemente se pueda unir con fetchFormInformation\n  const detectTransport = (event) => {\n    const selectedOption = event.target.options.selectedIndex;\n    const transportName = event.target.options[selectedOption].innerText\n    const transportValue = event.target.value * 1;\n    setTransportState([transportName, transportValue]);\n  }\n\n\t//calcula CO2 con la formula entregada en las instrucciones y guarda la info en su estado\n  const calculateCO2 = (event) => {\n\t\tevent.preventDefault();\n    let trips;\n    formState.roundTrip ? trips = 1 : trips = 2;\n    const totalCO2 = formState.transport[1] * formState.kms * trips;\n    const CO2byWorker = (formState.transport[1] * formState.kms * trips) / formState.workers;\n    setCO2State({\n      totalCO2,\n      CO2byWorker\n    })\n  }\n\n\t//se realiza una solicitud post solo si ya se realizó el cálculo y esta información se guardó en el estado correspondiente\n  useEffect(() => {\n    const submitLog = () => {\n      const tripLog = {\n        travelFrom: formState.fromAddress,\n        travelTo: formState.toAddress,\n        transport: formState.transport[0],\n        kmTraveled: formState.kms,\n        workers: formState.workers,\n        logAuthor: formState.logAuthor,\n        roundTrip: formState.roundTrip,\n        totalCO2: CO2State.totalCO2,\n        CO2byWorker: CO2State.CO2byWorker\n      }\n\n      //sending trip log to db\n      axios.post(`http://localhost:8000/travel-log/v1/travels/`, tripLog) \n      .then(res => {\n\t\t\t\tconsole.log(res);\n\t\t\t\tsetSuccessMessage(\"Viaje registrado correctamente.\");\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tsetSuccessMessage(`Se produjo un error durante el registro del viaje: ${error.message}`);\n\t\t\t})\n    }\n\n    if (CO2State !== null) {\n\t\t\tsubmitLog();\n    }\n  }, [CO2State])\n\n\t//para limpiar el mensaje que avisa que se registró el viaje\n\tif (successMessage) {\n\t\tsetTimeout(() => {\n\t\t\tsetSuccessMessage(null);\n\t\t}, 2000)\n\t}\n\n\treturn (\n\t\t<section>\n\t\t\t<div style={{display: 'flex', justifyContent: 'space-around', marginTop: '2rem'}}>\n\t\t\t\t<h1 style={{textAlign: 'center'}}>Formulario de registro de viajes</h1>\n\t\t\t\t<Link to=\"/\"><Button>Volver al inicio</Button></Link>\n\t\t\t\t<Link to=\"/lista-de-viajes\"><Button className=\"btn btn-warning\">Ver lista de viajes</Button></Link>\n\t\t\t</div>\n\t\t\t<Form\n        onChange={fetchFormInformation}\n        onSubmit={calculateCO2}\n\t\t\t\tstyle={{ width: \"80%\", margin: \"0 auto\", minHeight: \"120vh\" }}\n\t\t\t>\n        <Form.Group controlId=\"formLogAuthor\">\n\t\t\t\t\t<Form.Label>Autor</Form.Label>\n\t\t\t\t\t<Form.Control type=\"text\" placeholder=\"Escribe tu nombre completo\" required />\n\t\t\t\t</Form.Group>\n\n\t\t\t\t<Form.Group controlId=\"formFromAddress\">\n\t\t\t\t\t<Form.Label>Desde</Form.Label>\n\t\t\t\t\t<Form.Control type=\"address\" placeholder=\"Dirección\" required />\n\t\t\t\t</Form.Group>\n\n\t\t\t\t<Form.Group controlId=\"formToAddress\">\n\t\t\t\t\t<Form.Label>Hacia</Form.Label>\n\t\t\t\t\t<Form.Control type=\"address\" placeholder=\"Dirección\" required />\n\t\t\t\t</Form.Group>\n\n\t\t\t\t<Form.Group controlId=\"formTransport\">\n\t\t\t\t\t<Form.Label>Medio de transporte</Form.Label>\n\t\t\t\t\t<Form.Control onChange={detectTransport} as=\"select\" required >\n\t\t\t\t\t\t<option value=\"0.033\">Metro</option>\n\t\t\t\t\t\t<option value=\"0.21\">Auto</option>\n\t\t\t\t\t\t<option value=\"0.249\">Camioneta</option>\n\t\t\t\t\t\t<option value=\"0.092\">Motocicleta</option>\n\t\t\t\t\t\t<option value=\"0.039\">Bus Transantiago</option>\n\t\t\t\t\t\t<option value=\"0.012\">Bus privado</option>\n\t\t\t\t\t\t<option value=\"0.279\">Avión (nacional)</option>\n\t\t\t\t\t\t<option value=\"0.179\">Avión (internacional)</option>\n\t\t\t\t\t\t<option value=\"0\">Caminando</option>\n\t\t\t\t\t</Form.Control>\n\t\t\t\t</Form.Group>\n\n\t\t\t\t<Form.Group controlId=\"formKms\">\n\t\t\t\t\t<Form.Label>Kms recorridos</Form.Label>\n\t\t\t\t\t<Form.Control type=\"number\" placeholder=\"Kilómetros\" required />\n\t\t\t\t</Form.Group>\n\n\t\t\t\t<Form.Group controlId=\"formWorkers\">\n\t\t\t\t\t<Form.Label>Pasajeros</Form.Label>\n\t\t\t\t\t<Form.Control\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tplaceholder=\"Cantidad de personas en el viaje\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\t\t\t\t</Form.Group>\n\n\t\t\t\t<Form.Group controlId=\"formRoundtrip\">\n\t\t\t\t\t<Form.Check\n\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\tlabel=\"¿Solo ida? (desmarcar si fue ida y vuelta)\"\n\t\t\t\t\t/>\n\t\t\t\t</Form.Group>\n\t\t\t\t<Button className=\"btn btn-success\" variant=\"primary\" type=\"submit\">\n\t\t\t\t\tEnviar\n\t\t\t\t</Button>\n\t\t\t\t<h4 style={{marginTop: '1rem', color: 'green', fontWeight: 'bold'}}>{successMessage}</h4>\n\t\t\t</Form>\n\t\t</section>\n\t);\n};\n\nexport default TripLogger;\n","import './App.css';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport HomePage from './components/HomePage/HomePage.jsx';\nimport TripsLogged from './containers/TripsLogged/TripsLogged.jsx';\nimport TripLogger from './containers/TripLogger/TripLogger.jsx';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\n\nconst App = () => {\n  return (\n    <Router>\n      <main>\n        <Switch>\n          <Route path=\"/\" component={HomePage} exact/>\n          <Route path=\"/lista-de-viajes\" component={TripsLogged} />\n          <Route path=\"/registro-de-viajes\" component={TripLogger} />\n        </Switch>\n      </main>\n    </Router>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}